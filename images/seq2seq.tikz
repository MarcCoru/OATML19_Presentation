%\tikzsetnextfilename{seq2seq}

\tikzstyle{operator} = [draw, circle, fill=tumbluemedium, draw=tumbluemedium, inner sep=0, text=white]
%\tikzstyle{function} = [draw, rectangle, fill=tumbluemedium, draw=tumbluemedium, text=white]
\tikzstyle{gate} = [fill=tumivory,draw,rounded corners]

\tikzstyle{dummy} = [inner sep=0]
\tikzstyle{flow} = [rounded corners]
\tikzstyle{endflow} = [-stealth,flow]
\tikzstyle{beginflow} = [stealth-,flow]

\tikzstyle{bigbox} = [rectangle, draw=tumivory, thick, fill=tumgraylight, rounded corners, 
inner sep=.5ex]

\tikzstyle{bigpassbox} = [opacity=.2, rounded corners, draw=none]


\tikzset{pic shift/.store in=\shiftcoord,
	pic shift={(0,0)},
	pics/seqlstmencoder/.style={
		code={
		\begin{scope}[shift={\shiftcoord},xscale=1.3,yscale=.9]
			
			\node[dummy] (bl) at (0,0){}; % bottom left
			\node[dummy] (tr) at (1,1){}; % top right
			
			\node[dummy] (br) at ($ (bl -| tr) $){}; % bottom right
			\node[dummy] (tl) at ($ (bl |- tr) $){}; % top left
			
			\node[fit=(bl) (tr),bigbox] (-C) {};
			
			% input coordinate for rounded draw lines -> slightly right of tl
			\coordinate (-input) at (0.1,1); % top left
			
			% output coordinate for rounded draw lines -> slightly left of br
			\coordinate (-coutput) at (0.9,0); % bottom right
			\coordinate (-cinput) at (0.1,0); % bottom left
			\coordinate (-houtput) at (0.9,1); % bottom right
			
%			% gate distance
			\def\d{1/6}
			
			% gate heights
			\def\h{1/3}
			
			\coordinate (f)  at bl+(1*\d,0);
			\coordinate (i)  at bl+(2*\d,0);
			\coordinate (j)  at bl+(3*\d,0);
			\coordinate (o)  at bl+(4*\d,0);
			\coordinate (out) at bl+(5*\d,0);
			
			\coordinate (gates) at (0,2*\h);
			
			%\node[above=of tl](xt){$x_{t}$};
			%\node[left=of tl](htminus1){$h_{t-1}$};
			
			%\node[below=of br](ct){$c_{t}$};
			
			\node[gate](fgate) at ($ (gates -| f) $){};
			\node[gate](igate) at ($ (gates -| i) $){};
			\node[gate](jgate) at ($ (gates -| j) $){};
			\node[gate](ogate) at ($ (gates -| o) $){};
			
%			\coordinate (htminus1) at bl+(-.5,0);
%			\coordinate (ht) at bl+(-.5,0);
%			
			% forget gate
			\node[operator](fmult) at ($ (bl -| fgate) $) {};
			\draw[endflow] (-input) -| (fgate) -- (fmult); 
			
%			%j
			\node[operator](jmult) at ([shift={(0,-1*\h)}]jgate) {};
			\node[operator](cadd) at ($ (bl -| jgate) $) {};
			\draw[endflow] (-input) -| (jgate) -- (jmult);
			\draw[endflow] (jmult) -- (cadd); 			

%			%i	
			\draw[endflow] (-input) -| (igate) |- (jmult); 
%
%%			% outpu
			\node[operator](outtanh) at ([shift={(0,1*\h)}]out) {};
%			
%			%o 
			\draw[endflow] (tl) -| (ogate) |- (outtanh);
			\draw[flow] (outtanh) |- (-houtput);
%			
%			% output flow
			\draw[endflow] (cadd) -| (outtanh);
			\draw[flow] (-cinput) -- (fmult) -- (cadd) -- (-coutput);
%			
			
			% debug
%			\node at (gates) {\tiny{gates}};
%			\node at (-input) {\tiny{-input}};
%			\node at (-coutput) {\tiny{-coutput}};
%			\node at (-houtput) {\tiny{-houtput}};
%			\node at (f) {\tiny{f}};
%			\node at (i) {\tiny{i}};
%			\node at (j) {\tiny{j}};
%			\node at (o) {\tiny{o}};
%			\node at (tl) {\tiny{tl}};
%			\node at (br) {\tiny{br}};
%			\node at (bl) {\tiny{bl}};
%			\node at (tr) {\tiny{tr}};
%			\node at (out) {\tiny{out}};
			
		\end{scope}
		}
	}
}
\tikzset{pic shift/.store in=\shiftcoord,
	pic shift={(0,0)},
	pics/seqlstmdecoder/.style={
		code={
			\begin{scope}[shift={\shiftcoord},xscale=1.3,yscale=-.9]
				
				\node[dummy] (bl) at (0,0){}; % bottom left
				\node[dummy] (tr) at (1,1){}; % top right
				
				\node[dummy] (br) at ($ (bl -| tr) $){}; % bottom right
				\node[dummy] (tl) at ($ (bl |- tr) $){}; % top left
				
				\node[fit=(bl) (tr),bigbox] (-C) {};
				
				% input coordinate for rounded draw lines -> slightly right of tl
				\coordinate (-input) at (0.1,1); % top left
				
				% output coordinate for rounded draw lines -> slightly left of br
				\coordinate (-coutput) at (0.9,0); % bottom right
				\coordinate (-cinput) at (0.1,0); % bottom left
				\coordinate (-houtput) at (0.9,1); % top right
				
				%			% gate distance
				\def\d{1/6}
				
				% gate heights
				\def\h{1/3}
				
				\coordinate (f)  at bl+(1*\d,0);
				\coordinate (i)  at bl+(2*\d,0);
				\coordinate (j)  at bl+(3*\d,0);
				\coordinate (o)  at bl+(4*\d,0);
				\coordinate (out) at bl+(5*\d,0);
				
				\coordinate (gates) at (0,2*\h);
				
				%\node[above=of tl](xt){$x_{t}$};
				%\node[left=of tl](htminus1){$h_{t-1}$};
				
				%\node[below=of br](ct){$c_{t}$};
				
				\node[gate](fgate) at ($ (gates -| f) $){};
				\node[gate](igate) at ($ (gates -| i) $){};
				\node[gate](jgate) at ($ (gates -| j) $){};
				\node[gate](ogate) at ($ (gates -| o) $){};
				
				%			\coordinate (htminus1) at bl+(-.5,0);
				%			\coordinate (ht) at bl+(-.5,0);
				%			
				% forget gate
				\node[operator](fmult) at ($ (bl -| fgate) $) {};
				\draw[endflow] (-input) -| (fgate) -- (fmult); 
				
				%			%j
				\node[operator](jmult) at ([shift={(0,-1*\h)}]jgate) {};
				\node[operator](cadd) at ($ (bl -| jgate) $) {};
				\draw[endflow] (-input) -| (jgate) -- (jmult);
				\draw[endflow] (jmult) -- (cadd); 			
				
				%			%i	
				\draw[endflow] (-input) -| (igate) |- (jmult); 
				%
				%%			% outpu
				\node[operator](outtanh) at ([shift={(0,1*\h)}]out) {};
				%			
				%			%o 
				\draw[endflow] (tl) -| (ogate) |- (outtanh);
				\draw[flow] (outtanh) |- (-houtput);
				%			
				%			% output flow
				\draw[endflow] (cadd) -| (outtanh);
				\draw[flow] (-cinput) -- (fmult) -- (cadd) -- (-coutput);
				%			
				
				% debug
				%			\node at (gates) {\tiny{gates}};
				%			\node at (-input) {\tiny{-input}};
				%			\node at (-coutput) {\tiny{-coutput}};
				%			\node at (-houtput) {\tiny{-houtput}};
				%			\node at (f) {\tiny{f}};
				%			\node at (i) {\tiny{i}};
				%			\node at (j) {\tiny{j}};
				%			\node at (o) {\tiny{o}};
				%			\node at (tl) {\tiny{tl}};
				%			\node at (br) {\tiny{br}};
				%			\node at (bl) {\tiny{bl}};
				%			\node at (tr) {\tiny{tr}};
				%			\node at (out) {\tiny{out}};
				
			\end{scope}
		}
	}
}


\begin{tikzpicture}[scale=1, node distance=2em]%,show background rectangle,background rectangle/.style={draw=red}]

%\matrix (m) [matrix of nodes, ampersand replacement=\&]{

\def\d{1.8}
\def\encoderheight{0}
\def\decoderheight{-1.3}

\draw pic (enc1) at (\d,\encoderheight) {seqlstmencoder};% \&
\node[above=of enc1tl](xenc1){I};

\draw pic (enc2) at (2*\d,\encoderheight) {seqlstmencoder};
\node[above=of enc2-input](xenc2){live};

\draw pic (enc3) at (3*\d,\encoderheight) {seqlstmencoder};
\node[above=of enc3-input](xenc3){in};

\draw pic (enc4) at (4*\d,\encoderheight) {seqlstmencoder};
\node[above=of enc4-input](xenc4){Munich};

\draw pic (dec1) at (1*\d,\decoderheight) {seqlstmdecoder};% \&
\node[below=of dec1tr](ydec1){Ich};

\draw pic (dec2) at (2*\d,\decoderheight) {seqlstmdecoder};
\node[below=of dec2tr](ydec2){lebe};

\draw pic (dec3) at (3*\d,\decoderheight) {seqlstmdecoder};
\node[below=of dec3tr](ydec3){in};

\draw pic (dec4) at (4*\d,\decoderheight) {seqlstmdecoder};
\node[below=of dec4tr](ydec4){MÃ¼nchen};

\node[anchor=center](state) at ($(enc4-coutput)!0.5!(dec1-cinput)$){representation $\VCellState_T$};

\node[left=of enc1-input](enczerostateh){$\V{0}$};
\node[left=of enc1-cinput](enczerostatec){$\V{0}$};
\node[left=of dec1-input](deczerostateh){$\V{0}$};

\draw[endflow] (enczerostateh) -- (enc1-input);
\draw[endflow] (enczerostatec) -- (enc1-cinput);
\draw[endflow] (deczerostateh) -- (dec1-input);


% draw state
\draw[flow] (enc4-coutput) -- ++(.2,0) |- (state);
\draw[beginflow] (dec1-cinput) -- ++(-.2,0) |- (state);

% draw connections from input to cells
\draw[flow] (xenc1) |- (enc1-input);
\draw[flow] (xenc2) |- (enc2-input);
\draw[flow] (xenc3) |- (enc3-input);
\draw[flow] (xenc4) |- (enc4-input);

% draw connections from cells to output
\draw[beginflow] (ydec1) |- (dec1-houtput);
\draw[beginflow] (ydec2) |- (dec2-houtput);
\draw[beginflow] (ydec3) |- (dec3-houtput);
\draw[flow] (ydec4) |- (dec4-houtput);

% draw hidden connections between cells
\draw[endflow] (enc1-houtput) -- (enc2-input);
\draw[endflow] (enc2-houtput) -- (enc3-input);
\draw[endflow] (enc3-houtput) -- (enc4-input);

\draw[endflow] (dec1-houtput) -- (dec2-input);
\draw[endflow] (dec2-houtput) -- (dec3-input);
\draw[endflow] (dec3-houtput) -- (dec4-input);

% draw hidden connections between cells
\draw[endflow] (enc1-coutput) -- (enc2-cinput);
\draw[endflow] (enc2-coutput) -- (enc3-cinput);
\draw[endflow] (enc3-coutput) -- (enc4-cinput);

\draw[endflow] (dec1-coutput) -- (dec2-cinput);
\draw[endflow] (dec2-coutput) -- (dec3-cinput);
\draw[endflow] (dec3-coutput) -- (dec4-cinput);

%\node[bigpassbox, fill=classcolor, rectangle, minimum width=4cm,minimum height=3.5cm, anchor=center, label={[shift={(-1ex,-3.5ex)}]north:classification}] (classbox) at (13,0) {};
%};

\end{tikzpicture}